name: Update version
on: push
    # branches:
    #   - main
    #   - branchtest
    # paths:
    #   - '**.ssp'
    #   - '**/manifest.json'
jobs:
  version-the-ssp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install jq
        run: sudo apt install jq

      - name: Publish to Marketplace
        run: |
          echo "starting for loop"

          original_ifs="$IFS"

          # Change IFS to newline to handle file names with spaces
          IFS=$'\n'

          changed_files=$(git diff --name-only HEAD~1 HEAD)

          for file in $changed_files; do
            if [[ $file == *.ssp ]]; then
              echo "file: $file"
              folder=$(dirname "$file")
              echo "folder: $folder"
              manifest_file="manifest.json"
              iconImage="logo.png"
              echo "ls"
              ls $folder   
              manifest="$folder/manifest.json"           
              if [ -f "$manifest_file" ]; then
                echo "inside manifest"
                type=$(jq -r '.schema' "$manifest_file" | cut -d'/' -f1)
                name=$(jq -r '.name' "$manifest_file")
                title=$(jq -r '.title' "$manifest_file")
                description=$(jq -r '.description' "$manifest_file")
                version=$(jq -r '.version' "$manifest_file")

                echo "$type : $name : $title : $description : $version"
                
                if [ -z "$repo" ] || [ -z "$type" ] || [ -z "$name" ] || [ -z "$title" ] || [ -z "$description" ] || [ -z "$version" ] ; then
                    echo "Error: One or more required fields are empty or not found in $manifest_file"
                    exit 1
                fi
              fi




            fi
          done

        
          
          IFS="$original_ifs"



          # for file in $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.ssp$'); do          
          #   echo "file: $file"
          #   repo=$(dirname "$file")
          #   echo "repo: $repo"

          #     if [ -n "$repo_dir" ]; then
          #       echo "running publish script"
          #       python publish.py --repo-dir "$repo" --title "$title" --name "$name" --title "$title" --description "$description" --type "$type" --version "$version" --logo "$iconImage"
          #     else
          #       echo "Repo directory not found in $manifest_file"
          #     fi
          #   else
          #     echo "Manifest file not found in $folder_path"
          #   fi
          # done

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Github Action"
          git add -A
          git commit -m "Created version" || echo "No changes to commit"
          git push