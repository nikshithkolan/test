name: Update Connector Actions CSVs
on:
  push:
    branches:
      - main
    paths:
      - '**.ssp'
      - '**/manifest.json'
jobs:
  version-the-ssp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install jq
        run: sudo apt install jq

      - name: Publish to Marketplace
        run: |
          publish_url=https://<marketplace_url>
          username=${{ secrets.username }}
          password=${{ secrets.password }}

          for file in $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.ssp$'); do          
            repo=$(dirname "$file")
            manifest_file="$repo/manifest.json"
            iconImage="$repo/logo.png"
            
            if [ -f "$manifest_file" ]; then
              type=$(jq -r '.schema' "$manifest_file" | cut -d'/' -f1)
              name=$(jq -r '.name' "$manifest_file")
              title=$(jq -r '.title' "$manifest_file")
              description=$(jq -r '.description' "$manifest_file")
              version=$(jq -r '.version' "$manifest_file")
              iconImage=$(jq -r '.iconImage' "$manifest_file")

              if [ -z "$repo" ] || [ -z "$type" ] || [ -z "$name" ] || [ -z "$title" ] || [ -z "$description" ] || [ -z "$version" ] || [ -z "$iconImage" ]; then
                  echo "Error: One or more required fields are empty or not found in $manifest_file"
                  exit 1
              fi

              if [ -n "$repo_dir" ]; then
                python publish.py --repo-dir "$repo" --title "$title" --name "$name" --title "$title" --description "$description" --type "$type" --version "$version" --logo "$iconImage"
              else
                echo "Repo directory not found in $manifest_file"
              fi
            else
              echo "Manifest file not found in $folder_path"
            fi
          done

          for file in $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.ssp$'); do
            python publish.py --repo-dir <get from manifest.json>
          done


      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Github Action"
          git add -A
          git commit -m "Created version" || echo "No changesn to commit"
          git push